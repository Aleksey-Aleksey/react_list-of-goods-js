{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHA","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","sortReverse","setSortReverse","visibleGoods","goods","sortType","reverse","preparedGoods","sort","a","b","localeCompare","length","getPreparedGoods","className","onClick","cn","type","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,QACnBC,EAAoB,SA2BnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAEMC,EA7BR,SAA0BC,EAAOC,EAAUC,GACzC,IAAMC,EAAa,YAAOH,GAqB1B,OAnBIC,GACFE,EAAcC,MAAK,SAACC,EAAGC,GACrB,OAAQL,GACN,KAAKV,EACH,OAAOc,EAAEE,cAAcD,GAEzB,KAAKd,EACH,OAAOa,EAAEG,OAASF,EAAEE,OAEtB,QACE,OAAO,MAKXN,GACFC,EAAcD,UAGTC,EAOcM,CACnBnB,EACAK,EACAE,GAGF,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMf,EAAaL,IAC5BmB,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYjB,IAAcJ,IAE5BsB,KAAK,SALP,iCAUA,wBACEF,QAAS,kBAAMf,EAAaJ,IAC5BqB,KAAK,SACLH,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYjB,IAAcH,IAJ9B,4BAUA,wBACEmB,QAAS,kBAAMb,GAAgBD,IAC/BgB,KAAK,SACLH,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAaf,IAJjB,sBAUEF,GAAaE,IACb,wBACEc,QAAS,WACPf,EAAa,IACbE,GAAe,IAEjBY,UAAU,4BACVG,KAAK,SANP,sBAcJ,6BACGd,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCvGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.29b3f3fc.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHA = 'alpha';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, sortType, reverse) {\n  const preparedGoods = [...goods];\n\n  if (sortType) {\n    preparedGoods.sort((a, b) => {\n      switch (sortType) {\n        case SORT_FIELD_ALPHA:\n          return a.localeCompare(b);\n\n        case SORT_FIELD_LENGTH:\n          return a.length - b.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [sortReverse, setSortReverse] = useState(false);\n\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer,\n    sortField,\n    sortReverse,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_FIELD_ALPHA)}\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SORT_FIELD_ALPHA,\n          })}\n          type=\"button\"\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SORT_FIELD_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setSortReverse(!sortReverse)}\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !sortReverse,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortField || sortReverse) && (\n          <button\n            onClick={() => {\n              setSortField('');\n              setSortReverse(false);\n            }}\n            className=\"button is-danger is-light\"\n            type=\"button\"\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}